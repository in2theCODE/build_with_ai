version: '3.8'

networks:
  pulsar-net:
    driver: bridge

volumes:
  pulsar_data:
  zookeeper_data:
  bookkeeper_data:
  neo4j_data:
  postgres_data:
  qdrant_data:

services:
  # ZooKeeper
  zookeeper:
    image: apachepulsar/pulsar:4.0.0
    container_name: pulsar-zookeeper
    restart: unless-stopped
    networks:
      - pulsar-net
    volumes:
      - zookeeper_data:/pulsar/data/zookeeper
    environment:
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf &&
               bin/generate-zookeeper-config.sh conf/zookeeper.conf &&
               bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 3

  # BookKeeper
  bookie:
    image: apachepulsar/pulsar:4.0.0
    container_name: pulsar-bookie
    restart: unless-stopped
    networks:
      - pulsar-net
    depends_on:
      - zookeeper
    volumes:
      - bookkeeper_data:/pulsar/data/bookkeeper
    environment:
      - PULSAR_MEM=-Xms1g -Xmx1g -XX:MaxDirectMemorySize=2g
      - ZK_SERVERS=zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf &&
               bin/pulsar bookie"
    healthcheck:
      test: ["CMD", "bin/pulsar-bookie-healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Pulsar Broker
  broker:
    image: apachepulsar/pulsar:4.0.0
    container_name: pulsar-broker
    restart: unless-stopped
    networks:
      - pulsar-net
    depends_on:
      - zookeeper
      - bookie
    ports:
      - "6650:6650"
      - "8080:8080"
    volumes:
      - pulsar_data:/pulsar/data
    environment:
      - PULSAR_MEM=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=2g
      - zookeeperServers=zookeeper:2181
      - clusterName=pulsar-cluster
      - brokerServicePort=6650
      - webServicePort=8080
      - advertisedAddress=broker
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf &&
               bin/pulsar broker"
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:8080/admin/v2/brokers/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Neo4j - Graph Database
  neo4j:
    image: neo4j:5.11.0
    container_name: pulsar-neo4j
    restart: unless-stopped
    networks:
      - pulsar-net
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/swarm-password-123
      - NEO4J_dbms_memory_heap_max__size=1G
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 3

  # PostgreSQL - Relational Database
  postgres:
    image: postgres:17-bookworm
    container_name: pulsar-postgres
    restart: unless-stopped
    networks:
      - pulsar-net
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=swarm-password-123
      - POSTGRES_USER=swarm
      - POSTGRES_DB=agentswarm
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U swarm -d agentswarm"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Qdrant - Vector Database
  qdrant:
    image: qdrant/qdrant:v1.6.1
    container_name: pulsar-qdrant
    restart: unless-stopped
    networks:
      - pulsar-net
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT_ALLOW_RECOVERY_MODE=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 3