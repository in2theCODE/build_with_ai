version: '3.8'

networks:
  pulsar-net:
    driver: bridge
  monitoring-net:
    driver: bridge

volumes:
  # ZooKeeper data
  zookeeper_data_1:
  zookeeper_data_2:
  zookeeper_data_3:
  # BookKeeper data
  bookkeeper_data_1:
  bookkeeper_data_2:
  bookkeeper_data_3:
  # Broker data
  broker_data_1:
  broker_data_2:
  broker_data_3:
  # Management and monitoring
  pulsar_manager_data:
  prometheus_data:
  grafana_data:
  # Databases

services:
  #---------------------------------------------------------------------------
  # ZooKeeper Ensemble (3 nodes for HA)
  #---------------------------------------------------------------------------
  zookeeper-1:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-zookeeper-1
    restart: unless-stopped
    networks:
      - pulsar-net
    volumes:
      - zookeeper_data_1:/pulsar/data/zookeeper
      - ./certs:/pulsar/certs:ro
    environment:
      - PULSAR_MEM=-Xms1g -Xmx1g -XX:MaxDirectMemorySize=512m
      - ZOOKEEPER_SERVERS=zookeeper-1,zookeeper-2,zookeeper-3
      - ZOOKEEPER_SERVER_ID=1
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf &&
               bin/generate-zookeeper-config.sh conf/zookeeper.conf &&
               bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 1G

  zookeeper-2:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-zookeeper-2
    restart: unless-stopped
    networks:
      - pulsar-net
    volumes:
      - zookeeper_data_2:/pulsar/data/zookeeper
      - ./certs:/pulsar/certs:ro
    environment:
      - PULSAR_MEM=-Xms1g -Xmx1g -XX:MaxDirectMemorySize=512m
      - ZOOKEEPER_SERVERS=zookeeper-1,zookeeper-2,zookeeper-3
      - ZOOKEEPER_SERVER_ID=2
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf &&
               bin/generate-zookeeper-config.sh conf/zookeeper.conf &&
               bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 1G

  zookeeper-3:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-zookeeper-3
    restart: unless-stopped
    networks:
      - pulsar-net
    volumes:
      - zookeeper_data_3:/pulsar/data/zookeeper
      - ./certs:/pulsar/certs:ro
    environment:
      - PULSAR_MEM=-Xms1g -Xmx1g -XX:MaxDirectMemorySize=512m
      - ZOOKEEPER_SERVERS=zookeeper-1,zookeeper-2,zookeeper-3
      - ZOOKEEPER_SERVER_ID=3
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf &&
               bin/generate-zookeeper-config.sh conf/zookeeper.conf &&
               bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 1G

  #---------------------------------------------------------------------------
  # BookKeeper Cluster (3 bookies for redundancy)
  #---------------------------------------------------------------------------
  bookie-1:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-bookie-1
    restart: unless-stopped
    networks:
      - pulsar-net
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    volumes:
      - bookkeeper_data_1:/pulsar/data/bookkeeper
      - ./certs:/pulsar/certs:ro
    environment:
      - PULSAR_MEM=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=4g
      - ZK_SERVERS=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - advertisedAddress=bookie-1
      - useHostNameAsBookieID=true
      # Security settings
      - tlsEnabled=true
      - tlsCertificateFilePath=/pulsar/certs/bookie.crt
      - tlsKeyFilePath=/pulsar/certs/bookie.key
      - tlsTrustCertsFilePath=/pulsar/certs/ca.crt
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf &&
               bin/pulsar bookie"
    healthcheck:
      test: ["CMD", "bin/pulsar-bookie-healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          memory: 4G

  bookie-2:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-bookie-2
    restart: unless-stopped
    networks:
      - pulsar-net
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    volumes:
      - bookkeeper_data_2:/pulsar/data/bookkeeper
      - ./certs:/pulsar/certs:ro
    environment:
      - PULSAR_MEM=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=4g
      - ZK_SERVERS=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - advertisedAddress=bookie-2
      - useHostNameAsBookieID=true
      # Security settings
      - tlsEnabled=true
      - tlsCertificateFilePath=/pulsar/certs/bookie.crt
      - tlsKeyFilePath=/pulsar/certs/bookie.key
      - tlsTrustCertsFilePath=/pulsar/certs/ca.crt
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf &&
               bin/pulsar bookie"
    healthcheck:
      test: ["CMD", "bin/pulsar-bookie-healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          memory: 4G

  bookie-3:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-bookie-3
    restart: unless-stopped
    networks:
      - pulsar-net
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    volumes:
      - bookkeeper_data_3:/pulsar/data/bookkeeper
      - ./certs:/pulsar/certs:ro
    environment:
      - PULSAR_MEM=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=4g
      - ZK_SERVERS=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - advertisedAddress=bookie-3
      - useHostNameAsBookieID=true
      # Security settings
      - tlsEnabled=true
      - tlsCertificateFilePath=/pulsar/certs/bookie.crt
      - tlsKeyFilePath=/pulsar/certs/bookie.key
      - tlsTrustCertsFilePath=/pulsar/certs/ca.crt
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf &&
               bin/pulsar bookie"
    healthcheck:
      test: ["CMD", "bin/pulsar-bookie-healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          memory: 4G

  #---------------------------------------------------------------------------
  # Pulsar Brokers (3 for HA)
  #---------------------------------------------------------------------------
  broker-1:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-broker-1
    restart: unless-stopped
    networks:
      - pulsar-net
      - monitoring-net
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - bookie-1
      - bookie-2
      - bookie-3
    ports:
      - "6650:6650"  # Pulsar binary protocol
      - "8080:8080"  # Pulsar web service
    volumes:
      - broker_data_1:/pulsar/data
      - ./certs:/pulsar/certs:ro
      - ./conf/broker.conf:/pulsar/conf/broker.conf:ro
    environment:
      - PULSAR_MEM=-Xms4g -Xmx4g -XX:MaxDirectMemorySize=8g
      # ZooKeeper connection string
      - zookeeperServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - configurationStoreServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - clusterName=pulsar-cluster
      - advertisedAddress=broker-1
      # Security settings
      - brokerClientTlsEnabled=true
      - tlsEnabled=true
      - tlsCertificateFilePath=/pulsar/certs/broker.crt
      - tlsKeyFilePath=/pulsar/certs/broker.key
      - tlsTrustCertsFilePath=/pulsar/certs/ca.crt
      - authenticationEnabled=true
      - authenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderTls
      # Performance tuning
      - defaultNumberOfNamespaceBundles=128
      - subscriptionExpirationTimeMinutes=1440
      - brokerDeleteInactiveTopicsEnabled=true
      - brokerDeleteInactiveTopicsFrequencySeconds=3600
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf &&
               bin/pulsar broker"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters/pulsar-cluster"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 12G
        reservations:
          memory: 6G

  broker-2:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-broker-2
    restart: unless-stopped
    networks:
      - pulsar-net
      - monitoring-net
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - bookie-1
      - bookie-2
      - bookie-3
    ports:
      - "6651:6650"  # Pulsar binary protocol
      - "8081:8080"  # Pulsar web service
    volumes:
      - broker_data_2:/pulsar/data
      - ./certs:/pulsar/certs:ro
      - ./conf/broker.conf:/pulsar/conf/broker.conf:ro
    environment:
      - PULSAR_MEM=-Xms4g -Xmx4g -XX:MaxDirectMemorySize=8g
      # ZooKeeper connection string
      - zookeeperServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - configurationStoreServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - clusterName=pulsar-cluster
      - advertisedAddress=broker-2
      # Security settings
      - brokerClientTlsEnabled=true
      - tlsEnabled=true
      - tlsCertificateFilePath=/pulsar/certs/broker.crt
      - tlsKeyFilePath=/pulsar/certs/broker.key
      - tlsTrustCertsFilePath=/pulsar/certs/ca.crt
      - authenticationEnabled=true
      - authenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderTls
      # Performance tuning
      - defaultNumberOfNamespaceBundles=128
      - subscriptionExpirationTimeMinutes=1440
      - brokerDeleteInactiveTopicsEnabled=true
      - brokerDeleteInactiveTopicsFrequencySeconds=3600
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf &&
               bin/pulsar broker"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters/pulsar-cluster"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 12G
        reservations:
          memory: 6G

  broker-3:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-broker-3
    restart: unless-stopped
    networks:
      - pulsar-net
      - monitoring-net
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
      - bookie-1
      - bookie-2
      - bookie-3
    ports:
      - "6652:6650"  # Pulsar binary protocol
      - "8082:8080"  # Pulsar web service
    volumes:
      - broker_data_3:/pulsar/data
      - ./certs:/pulsar/certs:ro
      - ./conf/broker.conf:/pulsar/conf/broker.conf:ro
    environment:
      - PULSAR_MEM=-Xms4g -Xmx4g -XX:MaxDirectMemorySize=8g
      # ZooKeeper connection string
      - zookeeperServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - configurationStoreServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - clusterName=pulsar-cluster
      - advertisedAddress=broker-3
      # Security settings
      - brokerClientTlsEnabled=true
      - tlsEnabled=true
      - tlsCertificateFilePath=/pulsar/certs/broker.crt
      - tlsKeyFilePath=/pulsar/certs/broker.key
      - tlsTrustCertsFilePath=/pulsar/certs/ca.crt
      - authenticationEnabled=true
      - authenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderTls
      # Performance tuning
      - defaultNumberOfNamespaceBundles=128
      - subscriptionExpirationTimeMinutes=1440
      - brokerDeleteInactiveTopicsEnabled=true
      - brokerDeleteInactiveTopicsFrequencySeconds=3600
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf &&
               bin/pulsar broker"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters/pulsar-cluster"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 12G
        reservations:
          memory: 6G

  #---------------------------------------------------------------------------
  # Pulsar Proxy (for load balancing and external access)
  #---------------------------------------------------------------------------
  proxy:
    image: apachepulsar/pulsar:4.0.3
    container_name: pulsar-proxy
    restart: unless-stopped
    networks:
      - pulsar-net
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    ports:
      - "6660:6650"  # Pulsar binary protocol
      - "8090:8080"  # Pulsar web service
      - "8443:8443"  # HTTPS port
    volumes:
      - ./certs:/pulsar/certs:ro
    environment:
      - PULSAR_MEM=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=2g
      - zookeeperServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - configurationStoreServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      # Security settings
      - tlsEnabledWithBroker=true
      - tlsEnabledInProxy=true
      - tlsCertificateFilePath=/pulsar/certs/proxy.crt
      - tlsKeyFilePath=/pulsar/certs/proxy.key
      - tlsTrustCertsFilePath=/pulsar/certs/ca.crt
      - brokerProxyAllowedTargetHosts=broker-1,broker-2,broker-3
      - authenticationEnabled=true
      - authenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderTls
    command: >
      bash -c "bin/apply-config-from-env.py conf/proxy.conf &&
               bin/pulsar proxy"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/status.html"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4G
        reservations:
          memory: 2G

  #---------------------------------------------------------------------------
  # Pulsar Manager (Web UI)
  #---------------------------------------------------------------------------
  pulsar-manager:
    image: apachepulsar/pulsar-manager:v0.4.0
    container_name: pulsar-manager
    restart: unless-stopped
    networks:
      - pulsar-net
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    ports:
      - "9527:9527"  # Web UI
      - "7750:7750"  # Backend
    volumes:
      - pulsar_manager_data:/data
      - ./certs:/pulsar/certs:ro
      - ./conf/pulsar-manager/application.properties:/pulsar-manager/pulsar-manager/application.properties:ro
    environment:
      - SPRING_CONFIGURATION_FILE=/pulsar-manager/pulsar-manager/application.properties
      - REDIRECT_HOST=http://localhost
      - REDIRECT_PORT=9527
      - DRIVER_CLASS_NAME=org.postgresql.Driver
      - URL=jdbc:postgresql://postgres:5432/pulsar_manager
      - USERNAME=pulsar
      - PASSWORD=pulsar
      - LOG_LEVEL=INFO
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 1G