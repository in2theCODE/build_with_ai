


  resolve_timeout: 5m

# Route configurations
route:
  # Group alerts by cluster, component, and alertname
  group_by: ['cluster', 'component', 'alertname']

  # How long to wait to buffer alerts of the same group before sending
  group_wait: 30s

  # How long to wait before sending a notification about new alerts after the first
  group_interval: 5m

  # How long to wait before sending a notification again if it has already been sent
  repeat_interval: 4h

  # Default receiver if no match found
  receiver: 'team-email'

  # Child routes
  routes:
    - match:
        severity: critical
      receiver: 'team-pager'
      continue: true

    - match:
        component: broker
      receiver: 'broker-team'

    - match:
        component: bookie
      receiver: 'storage-team'

    - match:
        component: zookeeper
      receiver: 'infra-team'

# Receiver configurations
receivers:
  - name: 'team-email'
    email_configs:
      - to: 'team@example.org'
        from: 'alertmanager@example.org'
        smarthost: 'smtp.example.org:587'
        auth_username: 'alertmanager'
        auth_password: '{{ SMTP_PASSWORD }}'
        send_resolved: true

  - name: 'team-pager'
    pagerduty_configs:
      - service_key: '{{ PAGERDUTY_KEY }}'
        send_resolved: true

  - name: 'broker-team'
    slack_configs:
      - api_url: '{{ SLACK_API_URL }}'
        channel: '#broker-alerts'
        send_resolved: true

  - name: 'storage-team'
    slack_configs:
      - api_url: '{{ SLACK_API_URL }}'
        channel: '#storage-alerts'
        send_resolved: true

  - name: 'infra-team'
    slack_configs:
      - api_url: '{{ SLACK_API_URL }}'
        channel: '#infra-alerts'
        send_resolved: true

# Inhibition rules
inhibit_rules:
  # Inhibit warnings when there are critical alerts for the same component
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'component']