# System-wide configuration
system:
  name: "Neural Program Synthesis System"
  version: "2.0.0"
  default_language: "python"
  allow_best_effort: true
  log_level: "INFO"

# Apache Pulsar messaging configuration
pulsar:
  broker:
    service_url: "pulsar://pulsar-broker:6650"
    websocket_url: "ws://pulsar-broker:8080/ws"
    admin_url: "http://pulsar-broker:8080"

  topics:
    prefix: "program-synthesis"
    events:
      specification_submitted: "${pulsar.topics.prefix}.specification.submitted"
      synthesis_started: "${pulsar.topics.prefix}.synthesis.started"
      synthesis_completed: "${pulsar.topics.prefix}.synthesis.completed"
      verification_requested: "${pulsar.topics.prefix}.verification.requested"
      verification_completed: "${pulsar.topics.prefix}.verification.completed"
      code_generation_requested: "${pulsar.topics.prefix}.code.requested"
      code_generation_completed: "${pulsar.topics.prefix}.code.completed"
      feedback_submitted: "${pulsar.topics.prefix}.feedback.submitted"

  subscriptions:
    consumer_type: "Shared"  # Options: Exclusive, Shared, Failover, Key_Shared
    subscription_name: "synthesis-system"
    max_consumers_per_subscription: 10

  analytics:
    enabled: true
    aggregate_interval_seconds: 60
    retention_days: 30

# Service components configuration
services:
  # API Gateway
  api_gateway:
    host: "0.0.0.0"
    port: 8000
    rate_limit: 100
    timeout: 30
    auth_enabled: true
    cors_origins: ["*"]
    traefik:
      enabled: true
      dashboard: true

  # Aggregators
  aggregators:
    response_aggregator:
      timeout: 30
      max_parallel_requests: 50
      cache_ttl: 300

  # AST Code Generator
  ast_code_generator:
    optimization_level: 3
    style_guide: "pep8"
    include_comments: true
    cache_results: true
    max_ast_depth: 100
    default_language: "${system.default_language}"

  # Constraint Relaxer
  constraint_relaxer:
    max_relaxation_iterations: 5
    constraint_removal_threshold: 0.8
    range_expansion_factor: 1.5
    prioritize_edge_cases: true
    use_counterexample_guidance: true
    min_constraints_to_keep: 1
    strategy_weights:
      range_expansion: 0.4
      constraint_removal: 0.3
      constraint_weakening: 0.2
      type_generalization: 0.1

  # Feedback Collector
  feedback_collector:
    storage_type: "mongodb"
    connection_string: "mongodb://mongodb:27017/synthesis"
    collection_name: "feedback"
    batch_size: 50
    async_processing: true
    collect_performance_metrics: true
    collect_error_patterns: true
    collect_user_feedback: true
    max_feedback_size: 10000
    compress_old_data: true
    is_multi_tenant: true

  # Grafana & Prometheus Monitoring
  grafana:
    enabled: true
    admin_user: "admin"
    admin_password: "${GRAFANA_ADMIN_PASSWORD}"
    dashboards:
      - pulsar_overview
      - pulsar_messaging
      - pulsar_broker
      - pulsar_bookie
    datasource:
      prometheus_url: "http://prometheus:9090"

  prometheus:
    enabled: true
    scrape_interval: "15s"
    evaluation_interval: "15s"
    retention_time: "15d"

  # Incremental Synthesis
  incremental_synthesis:
    enabled: true
    cache_size: 1000
    similarity_threshold: 0.85
    use_previous_solutions: true
    max_iterations: 5

  # Knowledge Base
  knowledge_base:
    storage_type: "vector_db"
    vector_db_service:
      enabled: true
      host: "knowledge-base"
      port: 6333
    db_adapter:
      connection_pooling: true
      max_connections: 20
      timeout: 30
    embedding_model: "all-mpnet-base-v2"
    similarity_threshold: 0.85
    cache_size: 1000
    max_results: 20

  # Language Interop
  language_interop:
    supported_languages: ["python", "javascript", "java", "c++", "rust"]
    default_language: "${system.default_language}"
    transpilation_enabled: true

  # LLM Volume
  llm_volume:
    examples_path: "/app/examples"
    specs_path: "/app/specs"
    training_data_path: "/app/training_data"
    dataset_model_config: "/app/dataset_model_config.yaml"

  # Meta Learner
  meta_learner:
    enabled: true
    learning_rate: 0.001
    batch_size: 32
    epochs: 10
    model_save_path: "/app/app/meta_learner"
    use_pretrained: true

  # Neural Code Generator
  neural_code_generator:
    model_name: "codegen-16b"
    model_path: "/app/app/neural_code_generator"
    quantization: "int8"
    temperature: 0.2
    top_p: 0.95
    top_k: 50
    max_new_tokens: 2048
    max_context_length: 8192
    num_return_sequences: 3
    enhanced:
      use_retrieval_augmentation: true
      use_tree_transformers: true
      use_hierarchical_generation: true

  # Project Manager
  project_manager:
    enabled: true
    app_path: "/app"

  # Specification Parser
  specification_parser:
    parser_type: "smt"
    smt_solver: "z3"
    max_parse_depth: 100
    timeout: 30

  # Spec Registry
  spec_registry:
    enabled: true
    storage_path: "/app/specs"

  # Spec Inference
  spec_inference:
    enabled: true
    inference_methods: ["neural", "symbolic", "hybrid"]
    confidence_threshold: 0.75

  # Synthesis Engine
  synthesis_engine:
    timeout: 120
    max_iterations: 500
    strategies: ["neural", "hierarchical", "tree_transformer", "hybrid"]
    beam_width: 10
    use_knowledge_base: true
    use_incremental_synthesis: true
    early_stopping: true
    max_retries: 3



  # Verifier
  verifier:
    verifier_type: "statistical"
    sample_size: 2000
    confidence_threshold: 0.98
    timeout_per_test: 5

  # Version Manager
  version_manager:
    enabled: true
    storage_path: "/app/versions"

  # Workflow Orchestrator
  workflow_orchestrator:
    max_parallel_workflows: 10
    workflow_timeout: 300
    retry_failed_workflows: true
    max_retries: 3

# Orchestration configuration
orchestration:
  program_synthesizor:
    enabled: true
    max_concurrent_tasks: 20
    default_timeout: 300

  system:
    health_check_interval: 60
    restart_policy: "always"

# Resource limits for Kubernetes/Docker
resources:
  limits:
    memory:
      api_gateway: "1Gi"
      neural_code_generator: "16Gi"
      synthesis_engine: "8Gi"
      verifier: "4Gi"
      knowledge_base: "4Gi"
      ast_code_generator: "2Gi"
      constraint_relaxer: "2Gi"
      feedback_collector: "2Gi"
    cpu:
      api_gateway: "1"
      neural_code_generator: "8"
      synthesis_engine: "4"
      verifier: "2"
      knowledge_base: "2"
      ast_code_generator: "1"
      constraint_relaxer: "1"
      feedback_collector: "1"

  requests:
    memory:
      api_gateway: "512Mi"
      neural_code_generator: "8Gi"
      synthesis_engine: "4Gi"
      verifier: "2Gi"
      knowledge_base: "2Gi"
      ast_code_generator: "1Gi"
      constraint_relaxer: "1Gi"
      feedback_collector: "1Gi"
    cpu:
      api_gateway: "0.5"
      neural_code_generator: "4"
      synthesis_engine: "2"
      verifier: "1"
      knowledge_base: "1"
      ast_code_generator: "0.5"
      constraint_relaxer: "0.5"
      feedback_collector: "0.5"

# Docker and Kubernetes configuration
deployment:
  docker:
    registry: "docker.io/synthesis"
    tag: "latest"
    pull_policy: "IfNotPresent"

  kubernetes:
    namespace: "synthesis-system"
    service_account: "synthesis-sa"
    auto_scaling:
      enabled: true
      min_replicas: 1
      max_replicas: 5
      target_cpu_utilization: 75
      target_memory_utilization: 80