version: '3.8'

services:
  # API Gateway (Traefik)
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    user: "1000:1000"  # Run as non-root user (use an appropriate UID:GID)
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /Users/justinrussell/.traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - /Users/justinrussell/.traefik/certs:/etc/traefik/certs:ro
      - /Users/justinrussell/.traefik/dynamic:/etc/traefik/dynamic:ro
      - /Users/justinrussell/.traefik/acme:/etc/traefik/acme
    networks:
      - api-network
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8080/ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  # Authentication Sidecar
  auth-sidecar:
    build:
      context:
      dockerfile: Dockerfile
    container_name: auth-sidecar
    secrets:
      - clerk_public_key
      - clerk_secret_key
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - ALLOWED_ORIGINS=http://localhost:3001,http://localhost:3000,https://buildwithai.cloud
    volumes:
      # Mount the secrets directory as read-only files
      - /Users/justinrussell/.docker-secrets-codegen/NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:/run/secrets/clerk_publishable_key:ro
      - /Users/justinrussell/.docker-secrets-codegen/CLERK_SECRET_KEY:/run/secrets/clerk_secret_key:ro
      # Configuration volume if needed
      - ./config:/etc/auth-sidecar:ro
    networks:
      - api-network
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:3000/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s


    # Neo4j instance with updated SSL configuration
  neo4j-vector:
    image: neo4j:5.6.0-community
    container_name: neo4j-vector
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - NEO4J_AUTH=neo4j/yourpassword
      # Updated to newer setting names to avoid deprecation warnings
      - NEO4J_server_memory_pagecache_size=1G
      - NEO4J_server_memory_heap_initial__size=1G
      - NEO4J_server_memory_heap_max__size=2G
      - NEO4J_dbms_security_procedures_unrestricted=gds.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*
      - NEO4J_dbms_security_auth__enabled=true
      # Disable SSL to fix error
      - NEO4J_dbms_connector_bolt_tls__level=DISABLED
    ports:
      - "127.0.0.1:7474:7474"
      - "127.0.0.1:7687:7687"
    volumes:
      - neo4j-vector-data:/data
      - neo4j-vector-logs:/logs
      - neo4j-vector-plugins:/plugins
    networks:
      - spec-template-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7474/browser/" ]
      interval: 10s
      timeout: 5s
      retries: 3

    # Neural Interpreter
  neural-interpreter:
    build:
      context: ../src/api_gateway/neural_interpretor
    container_name: neural-interpreter
    restart: unless-stopped
    volumes:
      - ../src/services/api_gateway/neural_interpretor/app/config:/app/config
      - ../certs/neural_interpretor:/app/config/certs
    environment:
      - CONFIG_PATH=/app/config/config.yaml
      - LOG_LEVEL=INFO
      - NEO4J_URI=neo4j://neo4j-vector:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=yourpassword
    networks:
      - spec-template-network
      - pulsar-network
    healthcheck:
      test: [ "CMD", "test", "-e", "/tmp/agent-health.txt" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

secrets:
  clerk_public_key:
    file: /Users/justinrussell/.docker-secrets-codegen/next_public_clerk_publishable_key
  clerk_secret_key:
    file: /Users/justinrussell/.docker-secrets-codegen/clerk_secret_key
  db_user:
    file: /Users/justinrussell/.docker-secrets-codegen/db_user
  db_password:
    file: /Users/justinrussell/.docker-secrets-codegen/db_password
  openai_api_key:
    file: /Users/justinrussell/.docker-secrets-codegen/openai_api_key
  anthropic_api_key:
    file: /Users/justinrussell/.docker-secrets-codegen/anthropic_api_key
  pinecone_api_key:
    file: /Users/justinrussell/.docker-secrets-codegen/pinecone_api_key
  mongodb_root_password:
    file: /Users/justinrussell/.docker-secrets-codegen/mongodb_root_password
  pulsar_secret_key:
    file: /Users/justinrussell/.docker-secrets-codegen/pulsar_secret_key


networks:
  api-network:
    driver: bridge
  pulsar-network:
    driver: bridge
  spec-template-network:
    driver: bridge
  monitoring:
    driver: bridge

volumes:
  pulsar-data:
  spec_registry_data:
  neo4j-vector-data:
  neo4j-vector-logs:
  neo4j-vector-plugins: