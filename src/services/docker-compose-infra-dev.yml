networks:
  pulsar-network:
    name: pulsar-network
    driver: bridge
  spec-template-network:
    name: spec-template-network
    driver: bridge
  api-network:
    name: api-network
    driver: bridge
  monitoring:
    name: monitoring
    driver: bridge
  socket-proxy:
    name: socket-proxy
    driver: bridge

volumes:
  zookeeper_data_1:
  zookeeper_data_2:
  zookeeper_data_3:
  bookkeeper_data_1:
  bookkeeper_data_2:
  bookkeeper_data_3:
  broker_data_1:
  broker_data_2:
  broker_data_3:
  pulsar_manager_data:
  pulsar-data:

services:
  # ZooKeeper Ensemble
  zookeeper-1:
    image: apachepulsar/pulsar:4.0.4
    container_name: pulsar-zookeeper-1
    restart: unless-stopped
    networks:
      - pulsar-network
    ports:
      - "2181:2181"  # ZooKeeper client port for external access if needed
    volumes:
      - zookeeper_data_1:/pulsar/data/zookeeper
    environment:
      - PULSAR_MEM=-Xms1g -Xmx1g -XX:MaxDirectMemorySize=512m
      - ZOOKEEPER_SERVERS=zookeeper-1,zookeeper-2,zookeeper-3
      - ZOOKEEPER_SERVER_ID=1
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf &&
               bin/generate-zookeeper-config.sh conf/zookeeper.conf &&
               bin/pulsar zookeeper"
    healthcheck:
      test: [ "CMD", "bin/pulsar-zookeeper-ruok.sh" ]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper-2:
    image: apachepulsar/pulsar:4.0.4  # Updated to consistent version
    container_name: pulsar-zookeeper-2
    restart: unless-stopped
    networks:
      - pulsar-network
    volumes:
      - zookeeper_data_2:/pulsar/data/zookeeper
    environment:
      - PULSAR_MEM=-Xms1g -Xmx1g -XX:MaxDirectMemorySize=512m
      - ZOOKEEPER_SERVERS=zookeeper-1,zookeeper-2,zookeeper-3
      - ZOOKEEPER_SERVER_ID=2
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf &&
               bin/generate-zookeeper-config.sh conf/zookeeper.conf &&
               bin/pulsar zookeeper"
    healthcheck:
      test: [ "CMD", "bin/pulsar-zookeeper-ruok.sh" ]
      interval: 10s
      timeout: 5s
      retries: 3

  zookeeper-3:
    image: apachepulsar/pulsar:4.0.4  # Updated to consistent version
    container_name: pulsar-zookeeper-3
    restart: unless-stopped
    networks:
      - pulsar-network
    volumes:
      - zookeeper_data_3:/pulsar/data/zookeeper
    environment:
      - PULSAR_MEM=-Xms1g -Xmx1g -XX:MaxDirectMemorySize=512m
      - ZOOKEEPER_SERVERS=zookeeper-1,zookeeper-2,zookeeper-3
      - ZOOKEEPER_SERVER_ID=3
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf &&
               bin/generate-zookeeper-config.sh conf/zookeeper.conf &&
               bin/pulsar zookeeper"
    healthcheck:
      test: [ "CMD", "bin/pulsar-zookeeper-ruok.sh" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # Initialize cluster metadata
  init-cluster:
    image: apachepulsar/pulsar:4.0.4  # Updated to consistent version
    container_name: pulsar-init-cluster
    restart: on-failure
    networks:
      - pulsar-network
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
    command: >
      bash -c "bin/pulsar initialize-cluster-metadata \
               --cluster pulsar-cluster \
               --zookeeper zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181 \
               --configuration-store zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181 \
               --web-service-url http://broker-1:8080 \
               --broker-service-url pulsar://broker-1:6650"

  # BookKeeper Cluster
  bookie-1:
    image: apachepulsar/pulsar:4.0.4  # Updated to consistent version
    container_name: pulsar-bookie-1
    restart: unless-stopped
    networks:
      - pulsar-network
    ports:
      - "8000:8000"  # Added BookKeeper HTTP monitoring port
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
      init-cluster:
        condition: service_completed_successfully
    volumes:
      - bookkeeper_data_1:/pulsar/data/bookkeeper
    environment:
      - PULSAR_MEM=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=4g
      # Important: zkServers is what BookKeeper uses to connect to ZooKeeper
      - PULSAR_PREFIX_zkServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - PULSAR_PREFIX_metadataServiceUri=zk://zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/ledgers
      - PULSAR_PREFIX_advertisedAddress=bookie-1
      - PULSAR_PREFIX_useHostNameAsBookieID=true
      - PULSAR_PREFIX_httpServerEnabled=true  # Enable HTTP server for metrics
      - PULSAR_PREFIX_httpServerPort=8000     # Set HTTP server port
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf &&
               bin/pulsar bookie"
    healthcheck:
      test: [ "CMD", "bin/pulsar-bookie-healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 3

  bookie-2:
    image: apachepulsar/pulsar:4.0.4  # Updated to consistent version
    container_name: pulsar-bookie-2
    restart: unless-stopped
    networks:
      - pulsar-network
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
      init-cluster:
        condition: service_completed_successfully
    volumes:
      - bookkeeper_data_2:/pulsar/data/bookkeeper
    environment:
      - PULSAR_MEM=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=4g
      # Important: zkServers is what BookKeeper uses to connect to ZooKeeper
      - PULSAR_PREFIX_zkServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - PULSAR_PREFIX_metadataServiceUri=zk://zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/ledgers
      - PULSAR_PREFIX_advertisedAddress=bookie-2
      - PULSAR_PREFIX_useHostNameAsBookieID=true
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf &&
               bin/pulsar bookie"
    healthcheck:
      test: [ "CMD", "bin/pulsar-bookie-healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 3

  bookie-3:
    image: apachepulsar/pulsar:4.0.4  # Updated to consistent version
    container_name: pulsar-bookie-3
    restart: unless-stopped
    networks:
      - pulsar-network
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
      init-cluster:
        condition: service_completed_successfully
    volumes:
      - bookkeeper_data_3:/pulsar/data/bookkeeper
    environment:
      - PULSAR_MEM=-Xms2g -Xmx2g -XX:MaxDirectMemorySize=4g
      # Important: zkServers is what BookKeeper uses to connect to ZooKeeper
      - PULSAR_PREFIX_zkServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - PULSAR_PREFIX_metadataServiceUri=zk://zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181/ledgers
      - PULSAR_PREFIX_advertisedAddress=bookie-3
      - PULSAR_PREFIX_useHostNameAsBookieID=true
    command: >
      bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf &&
               bin/pulsar bookie"
    healthcheck:
      test: [ "CMD", "bin/pulsar-bookie-healthcheck.sh" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # Pulsar Brokers
  broker-1:
    image: apachepulsar/pulsar:4.0.4  # Updated to consistent version
    container_name: pulsar-broker-1
    restart: unless-stopped
    networks:
      - pulsar-network
      - spec-template-network  # Added connection to external network
      - api-network  # Added connection to external network
      - monitoring  # Added connection to external network
      - socket-proxy  # Added connection to external network
    depends_on:
      zookeeper-1:
        condition: service_healthy
      zookeeper-2:
        condition: service_healthy
      zookeeper-3:
        condition: service_healthy
      bookie-1:
        condition: service_healthy
      bookie-2:
        condition: service_healthy
      bookie-3:
        condition: service_healthy
    ports:
      - "6622:6650"  # Pulsar binary protocol
      - "8022:8080"  # Pulsar web service
    volumes:
      - broker_data_1:/pulsar/data
    environment:
      - PULSAR_MEM=-Xms4g -Xmx4g -XX:MaxDirectMemorySize=8g
      - PULSAR_PREFIX_zookeeperServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - PULSAR_PREFIX_configurationStoreServers=zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181
      - PULSAR_PREFIX_clusterName=pulsar-cluster
      - PULSAR_PREFIX_advertisedAddress=broker-1
      # Add BookKeeper settings to ensure availability
      - PULSAR_PREFIX_managedLedgerDefaultEnsembleSize=3
      - PULSAR_PREFIX_managedLedgerDefaultWriteQuorum=2
      - PULSAR_PREFIX_managedLedgerDefaultAckQuorum=2
    command: >
      bash -c "bin/apply-config-from-env.py conf/broker.conf &&
               bin/pulsar broker"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/admin/v2/clusters/pulsar-cluster" ]
      interval: 10s
      timeout: 5s
      retries: 3
    secrets:
      - source: pulsar_secret_key
        target: /pulsar/conf/pulsar_secret_key
      - source: clerk_public_key
        target: /pulsar/conf/clerk_public_key
      - source: clerk_secret_key
        target: /pulsar/conf/clerk_secret_key
      - source: anthropic_api_key
        target: /pulsar/conf/anthropic_api_key
      - source: openai_api_key
        target: /pulsar/conf/openai_api_key
      - source: pinecone_api_key
        target: /pulsar/conf/pinecone_api_key

  # Pulsar Manager
  pulsar-manager:
    image: apachepulsar/pulsar-manager:v0.4.0
    container_name: pulsar-manager
    restart: unless-stopped
    networks:
      - pulsar-network
      - api-network
      - monitoring
    depends_on:
      broker-1:
        condition: service_healthy
    ports:
      - "127.0.0.1:9522:9527"  # Web UI
    volumes:
      - pulsar_manager_data:/data
    environment:
      - SPRING_CONFIGURATION_FILE=/pulsar-manager/pulsar-manager/application.properties
      - REDIRECT_HOST=http://localhost
      - REDIRECT_PORT=9522  # Fixed to match the exposed host port
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9527" ]
      interval: 10s
      timeout: 5s
      retries: 3

# For Mac development - will need to modify for Ubuntu deployment
secrets:
  clerk_public_key:
    file: /Users/justinrussell/.docker-secrets-codegen/next_public_clerk_publishable_key
  clerk_secret_key:
    file: /Users/justinrussell/.docker-secrets-codegen/clerk_secret_key
  openai_api_key:
    file: /Users/justinrussell/.docker-secrets-codegen/openai_api_key
  anthropic_api_key:
    file: /Users/justinrussell/.docker-secrets-codegen/anthropic_api_key
  pinecone_api_key:
    file: /Users/justinrussell/.docker-secrets-codegen/pinecone_api_key
  pulsar_secret_key:
    file: /Users/justinrussell/.docker-secrets-codegen/pulsar_secret_key