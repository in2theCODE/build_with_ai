#--------------------------------------------
# Code Generation API Gateway Configuration
#--------------------------------------------
# Last updated: April 17, 2025

# Pulsar Connection Settings
pulsar:
  # Main Pulsar service URL (internal connection)
  service_url: "pulsar://localhost:6650"
  # TLS-enabled service URL (internal connection)
  service_url_tls: "pulsar+ssl://localhost:6651"
  # WebSocket connection URL for external clients
  websocket_url: "ws://localhost/pulsar/ws"
  # WebSocket TLS URL for external clients
  websocket_url_tls: "wss://localhost/pulsar/ws"
  # Enable TLS for secure connections
  tls_enabled: true
  # TLS certificate paths
  tls_trust_certs_file_path: "/opt/certs/ca.cert.pem"
  tls_cert_file_path: "/opt/certs/client.cert.pem"
  tls_key_file_path: "/opt/certs/client.key-pk8.pem"
  # Authentication settings
  auth_plugin: "org.apache.pulsar.client.impl.auth.AuthenticationTls"
  auth_params: {"tlsCertFile":"/opt/certs/client.cert.pem","tlsKeyFile":"/opt/certs/client.key-pk8.pem"}

# Topic Configuration for Code Generation
topics:
  # Workflow Topics
  workflow_phase0: "persistent://code-gen/workflow/source-of-truth"
  workflow_phase1: "persistent://code-gen/workflow/spec-sheets"
  workflow_phase2: "persistent://code-gen/workflow/filled-specs"
  workflow_phase3: "persistent://code-gen/workflow/implementation"
  workflow_phase4: "persistent://code-gen/workflow/integration"
  workflow_phase5: "persistent://code-gen/workflow/debugging"

  # One-off Request Topics
  single_requests: "persistent://code-gen/one-off/requests"
  brainstorming: "persistent://code-gen/one-off/brainstorming"
  conceptual: "persistent://code-gen/one-off/conceptual"

  # Result Topics
  results: "persistent://code-gen/results/completed"
  status: "persistent://code-gen/status/updates"

  # System Topics
  metrics: "persistent://code-gen/metrics/system"
  events: "persistent://code-gen/events/system"
  emergent: "persistent://code-gen/emergent/patterns"

# Neural Interpreter Classification Parameters
code_gen_classification:
  # Request type classification
  request_types:
    workflow:
      source_of_truth: ["single source of truth", "ssot", "source file", "project definition"]
      spec_sheets: ["spec sheet", "specification", "template", "blueprint"]
      filled_specs: ["fill spec", "complete specification", "implement spec"]
      implementation: ["implement", "code generation", "generate code"]
      integration: ["integrate", "combine", "assemble", "put together"]
      debugging: ["debug", "fix", "troubleshoot", "solve error"]

    one_off:
      function: ["function", "method", "routine", "procedure"]
      class: ["class", "object", "data structure"]
      component: ["component", "module", "widget", "element"]
      file: ["file", "single file", "script"]
      utility: ["utility", "helper", "tool"]

    conceptual:
      brainstorming: ["brainstorm", "ideate", "think", "concept", "idea"]
      architecture: ["architecture", "structure", "design pattern"]
      optimization: ["optimize", "improve", "enhance", "refactor"]

  # Language/Framework Detection
  languages:
    python: ["python", "py", "django", "flask", "fastapi"]
    javascript: ["javascript", "js", "node"]
    typescript: ["typescript", "ts"]
    nextjs: ["next.js", "nextjs", "next"]
    react: ["react", "jsx", "tsx"]
    pulsar: ["pulsar", "apache pulsar", "messaging"]
    html_css: ["html", "css", "web", "frontend"]
    other: ["other language", "different language"]

# Performance and Processing Configuration
processing:
  # Complexity threshold for determining processing mode
  complexity_threshold: 7
  # Max messages to batch when sending to Pulsar
  batch_size: 100
  # Max pending requests in the queue
  max_pending_requests: 1000
  # Concurrency settings
  concurrency:
    max_concurrent_tasks: 200
    tasks_per_worker: 10
    max_worker_threads: 20

# Authentication Configuration
auth:
  # Enable JWT authentication
  enabled: true
  # JWT authentication endpoint (sidecar)
  jwt_verify_endpoint: "http://auth-sidecar:3000/verify"
  # JWT authorization endpoint (sidecar)
  jwt_authorize_endpoint: "http://auth-sidecar:3000/authorize"
  # Required user roles for operations
  required_roles:
    admin_operations: ["admin"]
    generate_code: ["admin", "developer"]
    view_results: ["admin", "developer", "viewer"]

# API Gateway Settings
api:
  # Base paths
  paths:
    workflow: "/api/workflow"
    one_off: "/api/generate"
    brainstorm: "/api/brainstorm"
    status: "/api/status"
    emergent: "/api/emergent"

  # CORS settings
  cors:
    enabled: true
    allowed_origins:
      - "https://localhost.com"
      - "https://localhost.com"

  # Rate limiting
  rate_limit:
    enabled: true
    requests_per_minute: 60
    burst: 20

# Circuit breaker settings
circuit_breaker:
  failure_threshold: 5
  reset_timeout_seconds: 30
  half_open_max_requests: 2

# Retry policy
retry_policy:
  max_attempts: 3
  initial_backoff_ms: 1000
  max_backoff_ms: 10000
  backoff_multiplier: 2.0

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file_path: "/var/log/code_gen_gateway.log"
  max_file_size_mb: 100
  backup_count: 10
  performance_logging: true
  sensitive_data_masking: true